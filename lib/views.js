// Generated by CoffeeScript 1.3.3
(function() {
  var BaseView, Tab1View, Tab2View,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseView = (function(_super) {

    __extends(BaseView, _super);

    function BaseView() {
      this.setLoading = __bind(this.setLoading, this);

    }

    BaseView.prototype.setLoading = function(loading) {
      if (loading) {
        return $('#loading').show();
      } else {
        return $('#loading').hide();
      }
    };

    return BaseView;

  })(spore.View);

  /*
  Views go here
  */


  Tab1View = (function(_super) {

    __extends(Tab1View, _super);

    function Tab1View() {
      this.hide = __bind(this.hide, this);

      this.display = __bind(this.display, this);

      this.clear = __bind(this.clear, this);

      this.show = __bind(this.show, this);
      this.el = $('#tab1');
    }

    Tab1View.prototype.show = function() {
      this.el.show();
      window.scrollTo(0, 0);
      return this.setLoading(false);
    };

    Tab1View.prototype.clear = function() {
      return this.el.empty();
    };

    Tab1View.prototype.display = function() {
      return this.el.text('hey, tab1');
    };

    Tab1View.prototype.hide = function() {
      return this.el.hide();
    };

    return Tab1View;

  })(BaseView);

  exports.Tab1View = Tab1View;

  Tab2View = (function(_super) {

    __extends(Tab2View, _super);

    function Tab2View() {
      this.hide = __bind(this.hide, this);

      this.display = __bind(this.display, this);

      this.clear = __bind(this.clear, this);

      this.show = __bind(this.show, this);
      this.el = $('#tab2');
    }

    Tab2View.prototype.show = function() {
      this.el.show();
      window.scrollTo(0, 0);
      return this.setLoading(false);
    };

    Tab2View.prototype.clear = function() {
      return this.el.empty();
    };

    Tab2View.prototype.display = function() {
      var template;
      template = function() {
        h1('Hey There');
        return h3("Welcome to " + this.arg);
      };
      return this.el.append(CoffeeKup.render(template, {
        arg: 'tab2'
      }));
    };

    Tab2View.prototype.hide = function() {
      return this.el.hide();
    };

    return Tab2View;

  })(BaseView);

  exports.Tab2View = Tab2View;

}).call(this);
